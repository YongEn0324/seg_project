SHELL navigation:

cd - This is used to change your dir(directory/folder)
 
The usages of cd include; 
("cd dir_name" - changes the directory to a directory name specified but the directory you are changing to must be an immediate sub directory of the current working directory)
("cd ./dir_name" - works the same way as cd dir_name. The "./" means current working directory and what comes after; dir_name is a subdirectory or sub file )
("cd .." - change directory to parent of the current working directory)
("cd -" - changes the directory to the previous working directory )
("cd" - changes directory to the Home director i.e something like :c/Users/ASUS/)


mkdir - make a directory 


guys while writing this down, i realized something ... i dont have to do this !!!


y'all can read the manuals of these commands which give way more comprehensive explanations on the programs i'll itemize 




so for SHELL/GIT-BASH/mac-terminal navigation you need to learn the following commands by typing in "man";

man cd

man ls

man mv 

man cp

man rm 

man touch 

man cat

man echo 

man pwd

man mkdir

man rmdir

man alias (just for fun/advanced stuff) ; not needed but if you want to use it it is pretty cool

Right now these are all the commands i think would be necessary for working with git through the terminal ... 
the manuals are long reads but worth it if you can store their info along with thier options e.g check out what mkdir -p does

DONT HESITATE TO PLAY AROUND THE COMMANDS BUT BE CAREFUL WORKING WITH COMMANDS LIKE RM AND MV ... BEST CHOUCE IS TO CREATE MOCK FILES OR DIRECTORIES TO TEST THEM







SO FOR GIT COMMANDS :


git status - prints current status of your local repo and tells you if you need your working tree updated ...(it tells you when you need to push or pull i think)

git add file_name/dir_name - add a file(s) or directory(ies)  to your work tree ... for the multiple add you have two options git add (multiple file/dir names seperated by single spaces) or...
"git add ./" or "git add ." - this adds all the files/directories in the current working directory 

if you notice, it has some similarities to the shell commands so you can also use

"git add .." - adds all files and folders in the parent of the current working directory including the current working directory



"git commit" - launches a VI text file where you can make a more detailed explanation of your commit the =n commits your change 


"git commit -m "message"" uses what you include in the "message" as the description of your commit 

git push - pushes to git 

git pull - pulls changes from git 

I think this is all we need for our project ... i would send yall/add to this repo the cheatsheet tho





Now say you want to make a quick edit or make a quick change to a file or create a new file and write something in (file type can be .html, .css, .js, .md, ...) 
as long as it's a text file and you want to create it or make and Edit, you can do so by using VI/VIM(VI-improved) ... NB: I used VI to write the entirety of this text file


man vi - see the command definiton


To create/edit a file with VI - vi file_name



When vi is open; 

You're automatically in command mode 

so type in the command "i" to enter typing/inserting/editing mode 


make all edits you want freely 

after your edits, if you want to exit insert mode, you can do so by tapping the escape key

then when you are back in command mode, 

if you want to exit the file without saving any of your changes - :q!

if you want to exit the file and save all your changes - :wq



Woah!! that was a lot to type out ... hope you guys understand it better after reading this ... you can ask me some questions if you read this and have any !!!
